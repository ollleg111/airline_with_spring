CREATE SEQUENCE FLIGHT_SEQ INCREMENT BY 1 MAXVALUE 1000 CYCLE;
DROP SEQUENCE FLIGHT_SEQ;

CREATE SEQUENCE PASSENGER_SEQ INCREMENT BY 1 MAXVALUE 1000 CYCLE;
DROP SEQUENCE PASSENGER_SEQ;

CREATE SEQUENCE PLANE_SEQ INCREMENT BY 1 MAXVALUE 1000 CYCLE;
DROP SEQUENCE PLANE_SEQ;


--Plane:
--Long id
--String model
--String code
--Date yearProduced
--Double avgFuelConsumption

CREATE TABLE PLANE(
ID NUMBER PRIMARY KEY,
MODEL NVARCHAR2(50) NOT NULL,
CODE NVARCHAR2(50) NOT NULL,
YEAR_PRODUCED DATE NOT NULL,
AVG_FUEL_CONSUMPTION NUMBER (5,2)
);

--Flight:
--Long id
--Plane plane
--Collection passenger
--Date dateFlight
--String cityFrom
--String cityTo

CREATE TABLE FLIGHT(
ID NUMBER PRIMARY KEY,
PLANE NUMBER,
CONSTRAINT PLANE_FK FOREIGN KEY (PLANE) REFERENCES PLANE(ID),
DATE_FLIGHT DATE NOT NULL,
CITY_FROM NVARCHAR2(50) NOT NULL,
CITY_TO NVARCHAR2(50) NOT NULL
);
--DELETE SET ON

--Passenger:
--Long id
--String lastName
--String nationality
--Date dateOfBirth
--String passportCode
--Collection flights

CREATE TABLE PASSENGERS(
ID NUMBER PRIMARY KEY,
LAST_NAME NVARCHAR2(50) NOT NULL,
NATIONALITY NVARCHAR2(50) NOT NULL,
DATE_OF_BIRTH DATE NOT NULL,
PASSPORT_CODE NVARCHAR2(50) NOT NULL,
FLIGHT NUMBER,
CONSTRAINT FLIGHT_FK FOREIGN KEY (FLIGHT) REFERENCES FLIGHT(ID)
);

CREATE TABLE FLIGHTS_PASSENGERS(
FLIGHT_ID NUMBER,
CONSTRAINT FLIGHTS_FK FOREIGN KEY (FLIGHT_ID) REFERENCES FLIGHT(ID),
PASSENGER_ID NUMBER,
CONSTRAINT PASSENGERS_FK FOREIGN KEY (PASSENGER_ID) REFERENCES PASSENGER(ID)
);


INSERT INTO "MAIN"."PLANE" (ID, MODEL, CODE, YEAR_PRODUCED, AVG_FUEL_CONSUMPTION) VALUES ('101', N'Airbus', N'AA6655', TO_DATE('2020-01-13 14:27:41', 'YYYY-MM-DD HH24:MI:SS'), '600.34')
INSERT INTO "MAIN"."PLANE" (ID, MODEL, CODE, YEAR_PRODUCED, AVG_FUEL_CONSUMPTION) VALUES ('102', N'Airbus', N'AA6655', TO_DATE('2015-01-16 14:33:52', 'YYYY-MM-DD HH24:MI:SS'), '700.35')
INSERT INTO "MAIN"."PLANE" (ID, MODEL, CODE, YEAR_PRODUCED, AVG_FUEL_CONSUMPTION) VALUES ('103', N'Airbus', N'AA6677', TO_DATE('2019-01-04 14:34:16', 'YYYY-MM-DD HH24:MI:SS'), '700.46')
INSERT INTO "MAIN"."PLANE" (ID, MODEL, CODE, YEAR_PRODUCED, AVG_FUEL_CONSUMPTION) VALUES ('104', N'Boing', N'BB7788', TO_DATE('2013-01-23 14:34:51', 'YYYY-MM-DD HH24:MI:SS'), '800.25')
INSERT INTO "MAIN"."PLANE" (ID, MODEL, CODE, YEAR_PRODUCED, AVG_FUEL_CONSUMPTION) VALUES ('105', N'Boing', N'BB7865', TO_DATE('2014-01-10 14:35:18', 'YYYY-MM-DD HH24:MI:SS'), '800.25')
INSERT INTO "MAIN"."PLANE" (ID, MODEL, CODE, YEAR_PRODUCED, AVG_FUEL_CONSUMPTION) VALUES ('106', N'Duglas', N'CC7799', TO_DATE('2020-01-13 14:36:22', 'YYYY-MM-DD HH24:MI:SS'), '900.46')

INSERT INTO "MAIN"."FLIGHT" (ID, PLANE, DATE_FLIGHT, CITY_FROM, CITY_TO) VALUES ('1001', '102', TO_DATE('2020-01-13 14:38:08', 'YYYY-MM-DD HH24:MI:SS'), N'Kiev', N'Dnipro')
INSERT INTO "MAIN"."FLIGHT" (ID, PLANE, DATE_FLIGHT, CITY_FROM, CITY_TO) VALUES ('1002', '102', TO_DATE('2020-01-14 14:38:52', 'YYYY-MM-DD HH24:MI:SS'), N'Kiev', N'Dnipro')
INSERT INTO "MAIN"."FLIGHT" (ID, PLANE, DATE_FLIGHT, CITY_FROM, CITY_TO) VALUES ('1003', '102', TO_DATE('2020-01-15 14:39:15', 'YYYY-MM-DD HH24:MI:SS'), N'Kiev', N'Dnipro')
INSERT INTO "MAIN"."FLIGHT" (ID, PLANE, DATE_FLIGHT, CITY_FROM, CITY_TO) VALUES ('1004', '102', TO_DATE('2020-01-16 14:39:40', 'YYYY-MM-DD HH24:MI:SS'), N'Kiev', N'Dnipro')
INSERT INTO "MAIN"."FLIGHT" (ID, PLANE, DATE_FLIGHT, CITY_FROM, CITY_TO) VALUES ('1005', '104', TO_DATE('2020-01-13 14:40:10', 'YYYY-MM-DD HH24:MI:SS'), N'Kiev', N'Praha')
INSERT INTO "MAIN"."FLIGHT" (ID, PLANE, DATE_FLIGHT, CITY_FROM, CITY_TO) VALUES ('1006', '104', TO_DATE('2020-01-14 14:40:32', 'YYYY-MM-DD HH24:MI:SS'), N'Kiev', N'Praha')
INSERT INTO "MAIN"."FLIGHT" (ID, PLANE, DATE_FLIGHT, CITY_FROM, CITY_TO) VALUES ('1007', '104', TO_DATE('2020-01-15 14:40:51', 'YYYY-MM-DD HH24:MI:SS'), N'Kiev', N'Praha')
INSERT INTO "MAIN"."FLIGHT" (ID, PLANE, DATE_FLIGHT, CITY_FROM, CITY_TO) VALUES ('1008', '104', TO_DATE('2020-01-16 14:41:11', 'YYYY-MM-DD HH24:MI:SS'), N'Kiev', N'Praha')

INSERT INTO "MAIN"."PASSENGER" (ID, LAST_NAME, NATIONALITY, DATE_OF_BIRTH, PASSPORT_CODE, FLIGHT) VALUES ('10001', N'Zingher', N'GER', TO_DATE('2020-01-13 14:42:56', 'YYYY-MM-DD HH24:MI:SS'), N'AA232323', '1002')
INSERT INTO "MAIN"."PASSENGER" (ID, LAST_NAME, NATIONALITY, DATE_OF_BIRTH, PASSPORT_CODE, FLIGHT) VALUES ('10002', N'Bruner', N'GER', TO_DATE('2000-01-14 14:43:36', 'YYYY-MM-DD HH24:MI:SS'), N'AA887766', '1002')
INSERT INTO "MAIN"."PASSENGER" (ID, LAST_NAME, NATIONALITY, DATE_OF_BIRTH, PASSPORT_CODE, FLIGHT) VALUES ('10003', N'Ivanov', N'RUS', TO_DATE('2020-01-23 14:44:03', 'YYYY-MM-DD HH24:MI:SS'), N'ZZ333333', '1002')

SELECT
p.id, p.last_name, p.nationality, p.date_of_birth, p.passport_code FROM
passenger p,
flights_passengers fp,
flight f WHERE
p.id = fp.passenger_id AND
fp.flight_id = f.id AND
TO_NUMBER(TO_CHAR(f.date_flight,'YYYY')) = 2001 GROUP BY
p.id, p.last_name, p.nationality, p.date_of_birth, p.passport_code HAVING COUNT(fp.flight_id) > 25;

SELECT * FROM PLANE WHERE TO_NUMBER(TO_CHAR(SYSDATE,'YYYY') - TO_CHAR(YEAR_PRODUCED,'YYYY')) > 20;
SELECT * FROM PLANE WHERE TO_NUMBER(TO_CHAR(EXTRACT(YEAR FROM SYSDATE)) - TO_CHAR(YEAR_PRODUCED,'YYYY')) > 20;

SELECT
p.id,
p.model,
p.code,
p.year_produced,
p.avg_fuel_consumption
FROM PLANE p WHERE TO_NUMBER(TO_CHAR(SYSDATE,'YYYY') - TO_CHAR(YEAR_PRODUCED,'YYYY')) > 20;

SELECT
p.id, p.model, p.code, p.year_produced, p.avg_fuel_consumption FROM
plane p, flight f WHERE
f.plane = p.id AND
TO_NUMBER(TO_CHAR(f.date_flight,'YYYY')) = 2001 GROUP BY
p.id, p.model, p.code, p.year_produced, p.avg_fuel_consumption HAVING COUNT(f.id) > 300;


SELECT * FROM
(SELECT * FROM flight f, flights_passengers fp
WHERE f.id = fp.flight_id
GROUP BY f.city_from
ORDER BY COUNT(fp.flight_id) DESC)
WHERE ROWNUM <=10;

SELECT * FROM
(SELECT * FROM flight f, flights_passengers fp
WHERE f.city_from = 'DNIPRO' AND f.id = fp.flight_id
GROUP BY f.id, f.plane, f.date_flight, f.city_from, f.city_to
ORDER BY COUNT(fp.flight_id) DESC)
WHERE ROWNUM <= 10;

SELECT * FROM
(SELECT * FROM flight f, flights_passengers fp
WHERE f.id = fp.flight_id
GROUP BY f.city_to
ORDER BY COUNT(fp.flight_id) DESC)
WHERE ROWNUM <=10;

SELECT * FROM
(SELECT * FROM flight f, flights_passengers fp
WHERE f.city_to = 'DNIPRO' AND f.id = fp.flight_id
GROUP BY f.id, f.plane, f.date_flight, f.city_from, f.city_to
ORDER BY COUNT(fp.flight_id) DESC)
WHERE ROWNUM <= 10;